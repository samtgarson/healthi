function cardReady() {
    var r = this.repeat, d = this.done, t = this;
    setTimeout(function() {
        t.$el.classList.remove("slideeClosed");
    }, 200), this.ticks = [];
    for (var j = 0; r > j; j++) {
        var b = d > j ? !0 : !1;
        this.ticks.push(b);
    }
}

function complete() {
    this.done++, this.ticks.$set(this.done - 1, !0), this.done == this.repeat && this.$dispatch("replaceCard", this.$index);
}

function flip() {
    this.flipped = !this.flipped;
}

function skip() {
    this.skipped = !0, this.$dispatch("replaceCard", this.$index);
}

function homeInit() {
    $(".closed").removeClass("closed"), initSliders(), this.$on("replaceCard", replaceCard);
}

function replaceCard(index) {
    var url = "http://www.json-generator.com/j/cfSWgCFUqG?indent=4";
    $.getJSON(url, function(data) {
        var newGoal = data;
        setTimeout(function() {
            app.$broadcast("congratsFade", index, function() {
                app.goals.$set(index, newGoal);
            });
        }, 800);
    });
}

function initSliders() {
    navDealer = new Dragdealer("navWrapper", {
        x: 1,
        steps: 4,
        loose: !0,
        animationCallback: navDuring
    }), contentDealer = new Dragdealer("contentWrapper", {
        x: 1,
        steps: 4,
        loose: !0,
        animationCallback: contentDuring
    });
    $("#navWrapper").on("click", "li", function(e) {
        e.preventDefault();
        var index = $(e.currentTarget).index();
        navDealer.setStep(4 - index, 0);
    });
}

function navDuring(x) {
    "undefined" != typeof contentDealer && $(".slider-content .handle").css("left", ($("#contentWrapper").width() - $("#contentWrapper .handle").width()) * x + "px"), 
    $(".selector ul").css("margin-left", 240 * x - 240 + "px");
    var newStep = Math.abs(this.getStep()[0] - 4);
    app.$.View.currentGoal = newStep - 1, currentStep != newStep && goalFunc(currentStep), 
    currentStep = newStep, sliderTitle(x);
}

function contentDuring(x) {
    "undefined" != typeof navDealer && ($(".slider-nav .handle").css("left", 240 * x + "px"), 
    $(".selector ul").css("margin-left", 240 * x - 240 + "px"));
    var newStep = Math.abs(this.getStep()[0] - 4);
    app.$.View.currentGoal = newStep - 1, currentStep != newStep && goalFunc(currentStep), 
    currentStep = newStep, sliderTitle(x);
}

function sliderTitle(x) {
    var newTitle = .8 > x ? "goals" : "home";
    newTitle != app.$.View.title && (app.$.View.title = newTitle, $("footer").scrollTop() && $("footer").scrollTop(0));
}

function goalFunc() {
    for (var i in app.goals) app.goals[i].flipped = !1;
}

function viewReady() {
    var t = this;
    setTimeout(function() {
        t.init();
    }, 100), this.$watch("title", this.$parent.changeTitle);
}

function test() {
    console.log("testing");
}

function appReady() {
    if (storage("user")) {
        var t = this;
        setTimeout(function() {
            t.loadData();
        }, 0);
    } else this.changePage("login");
}

function loadData() {
    this.user = storage("user"), this.goals = storage("goals"), this.$watch("user", this.syncUser), 
    this.$watch("goals", this.syncGoals), this.changePage("home");
}

function changePage(newpage) {
    this.view = newpage, setTimeout(function() {
        app.changeTitle(app.$.View.title);
    }, 0);
}

function closeMenu(item) {
    "undefined" == typeof item || $(item.$el).hasClass("current") || this.changePage(item.name), 
    this.changeTitle(this.$.View.title), this.menuOpen = !1;
}

function openMenu() {
    this.menuOpen = !0, this.changeTitle("menu");
}

function changeTitle(newTitle) {
    newTitle != $("span.old").text().toLowerCase() && (document.title = "Healthi: " + newTitle.substr(0, 1).toUpperCase() + newTitle.substr(1, newTitle.length), 
    $("h1#title span").addClass("old"), $("h1#title").prepend("<span class='new'>" + newTitle + "</span>"), 
    setTimeout(function() {
        $(".new").css("margin-top", 0), setTimeout(function() {
            $(".old").remove(), $("span.new").removeClass("new");
        }, 400);
    }, 0));
}

function syncUser(newval) {
    storage.set("user", newval);
}

function syncGoals(newval) {
    storage.set("goals", newval);
}

function logout() {
    storage.empty(), this.user = !1, this.goals = !1, this.changePage("login"), this.closeMenu();
}

function loginInit() {
    console.log("login!");
}

function loginClick() {
    var $this = this, url = "http://www.json-generator.com/j/bVsjopTbkO?indent=4";
    $.get(url, function(json) {
        storage.set(json);
    }).done(function() {
        $this.$parent.loadData(), $this.$parent.changePage("home");
    });
}

Vue.component("card", {
    template: "#cardTpl",
    data: {
        ticks: [],
        skipped: !1,
        flipped: !1
    },
    computed: {
        completed: function() {
            return this.skipped ? !0 : this.done >= this.repeat;
        }
    },
    ready: cardReady,
    methods: {
        complete: complete,
        skip: skip,
        flip: flip,
        testFunc: test
    }
}), Vue.component("congrats", {
    template: "#congratsTpl",
    data: {
        choices: [ "Nice One!", "Good Job!", "Feeling Good!" ]
    },
    computed: {
        skipped: function() {
            return this.$parent.skipped;
        },
        msg: function() {
            if (this.skipped) return "Skipped";
            var l = this.choices.length, i = Math.floor(Math.random() * l);
            return console.log(l, i), this.choices[i];
        },
        icon: function() {
            return this.skipped ? "T" : "T";
        }
    },
    ready: function() {
        $(this.$el).animate({
            opacity: "1",
            marginTop: "20px"
        }, 300), this.$on("congratsFade", function(index, callback) {
            index == this.index && $(this.$el).animate({
                marginTop: "100%",
                opacity: 0
            }, 100).promise().done(function() {
                setTimeout(callback, 200);
            });
        });
    }
}), Vue.component("home", {
    template: "#homeTpl",
    ready: viewReady,
    data: {
        name: "home",
        title: "home",
        currentGoal: -1
    },
    methods: {
        init: homeInit,
        replaceCard: replaceCard
    }
});

var navDealer, contentDealer, currentStep = 0;

Vue.component("login", {
    template: "#loginTpl",
    data: {
        name: "login",
        title: "login"
    },
    methods: {
        init: loginInit,
        loginClick: loginClick
    }
});

var app = new Vue({
    el: "body",
    ready: appReady,
    data: {
        view: "home",
        menuOpen: !1,
        views: [ {
            name: "home",
            icon: "h"
        } ],
        user: {},
        goals: []
    },
    methods: {
        toggleMenu: function() {
            this.menuOpen ? this.closeMenu() : this.openMenu();
        },
        closeMenu: closeMenu,
        changeTitle: changeTitle,
        openMenu: openMenu,
        changePage: changePage,
        appReady: appReady,
        loadData: loadData,
        syncUser: syncUser,
        syncGoals: syncGoals,
        logout: logout
    }
});