function homeFunc() {
    $(".closed").removeClass("closed"), navDealer = new Dragdealer("navWrapper", {
        x: 1,
        steps: 4,
        loose: !0,
        animationCallback: navDuring
    }), contentDealer = new Dragdealer("contentWrapper", {
        x: 1,
        steps: 4,
        loose: !0,
        animationCallback: contentDuring
    });
    $("#navWrapper").on("click", "li", function(e) {
        e.preventDefault();
        var index = $(e.currentTarget).index();
        console.log($(e.currentTarget).index()), navDealer.setStep(4 - index, 0);
    });
}

function navDuring(x) {
    "undefined" != typeof contentDealer ? $(".slider-content .handle").css("left", contentDealer.bounds.availWidth * x + "px") : console.log("boo"), 
    $(".selector ul").css("margin-left", 240 * x - 240 + "px"), goalFunc(Math.abs(this.getStep()[0] - 4)), 
    sliderTitle(x);
}

function contentDuring(x) {
    "undefined" != typeof navDealer && ($(".slider-nav .handle").css("left", 240 * x + "px"), 
    $(".selector ul").css("margin-left", 240 * x - 240 + "px")), goalFunc(Math.abs(this.getStep()[0] - 4)), 
    sliderTitle(x);
}

function sliderTitle(x) {
    var newTitle = .8 > x ? "goals" : "home";
    newTitle != view.title && (view.title = newTitle, $("footer").scrollTop() && $("footer").scrollTop(0));
}

function nearest(num, arr) {
    var i = 0, res = arr.reduce(function(prev, curr) {
        return Math.abs(curr - num) < Math.abs(prev - num) ? (i++, curr) : prev;
    });
    return [ res, i ];
}

function slideAll(index) {
    var r = -79 * index, m = $("body").width() / 2 + r, e = "easeOutExpo", time = 700, pageMargin = 100 * index;
    $(".selector ul").stop().animate({
        marginLeft: r
    }, time, e), $(".slider-nav ul").stop().animate({
        left: m
    }, time, e), $(".slider-content").stop().animate({
        left: "-" + pageMargin + "%"
    }, time, e), console.log("** " + r);
    var newTitle = $(".slidee").eq(index).attr("class").split("slidee ")[1];
    newTitle != view.title && (view.title = newTitle, $("footer").scrollTop() && $("footer").scrollTop(0));
}

function goalFunc(index) {
    $(".slidee.goals .module").eq(index - 1).removeClass("goalClosed"), $(".slidee.goals .module").not(":eq(" + (index - 1) + ")").addClass("goalClosed");
}

function appReady() {}

function pageReady() {
    this.$watch("name", function(newValue) {
        this.title = newValue;
    }), this.$watch("title", this.$parent.changeTitle), this.loadContent();
}

function changePage(item) {
    var newPage = item.name;
    $("#" + newPage).hasClass("current") ? this.closeMenu() : ($("section.main").empty(), 
    view.viewData = {}, view.name = newPage, this.closeMenu(), view.loadContent());
}

function loadContent() {
    var file = "build/templates/" + this.name + ".html";
    $.get(file, function(html) {
        $("section.main").html(html);
    }).done(function() {
        setTimeout(function() {
            eval(view.name + "Func()");
        }, 350);
    });
}

function closeMenu() {
    this.changeTitle(view.title), this.menuOpen = !1;
}

function openMenu() {
    this.menuOpen = !0, $(".current").removeClass("current"), $("#pages #" + view.name).addClass("current"), 
    this.changeTitle("menu");
}

function changeTitle(newTitle) {
    document.title = "Healthi: " + newTitle.substr(0, 1).toUpperCase() + newTitle.substr(1, newTitle.length), 
    $("h1#title span").addClass("old"), $("h1#title").prepend("<span class='new'>" + newTitle + "</span>"), 
    setTimeout(function() {
        $(".new").css("margin-top", 0), setTimeout(function() {
            $(".old").remove(), $("span.new").removeClass("new");
        }, 400);
    }, 0);
}

var navDealer, contentDealer, currentX = 0;

Vue.component("Page", {
    template: "hello",
    ready: pageReady,
    data: {
        name: "home",
        title: "home",
        viewData: {}
    },
    methods: {
        loadContent: loadContent
    }
});

var app = new Vue({
    el: "body",
    ready: appReady,
    data: {
        menuOpen: !1,
        views: [ {
            name: "home",
            icon: "h"
        }, {
            name: "settings",
            icon: "C"
        } ]
    },
    methods: {
        toggleMenu: function() {
            this.menuOpen ? this.closeMenu() : this.openMenu();
        },
        closeMenu: closeMenu,
        changeTitle: changeTitle,
        openMenu: openMenu,
        changePage: changePage
    }
}), view = app.$.pageref;